networks:
  microservices-network:
    driver: bridge

volumes:
  mysql-product-data:
  mysql-payment-data:
  mysql-order-data:
  redis-data:

services:
  # ================================
  # INFRAESTRUCTURA
  # ================================
  
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - microservices-network
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9411/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # ================================
  # BASES DE DATOS MYSQL
  # ================================

  mysql-product:
    image: mysql:8.0
    container_name: mysql-product
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: product_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - microservices-network
    volumes:
      - mysql-product-data:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-payment:
    image: mysql:8.0
    container_name: mysql-payment
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: payment_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - microservices-network
    volumes:
      - mysql-payment-data:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-order:
    image: mysql:8.0
    container_name: mysql-order
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: order_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    networks:
      - microservices-network
    volumes:
      - mysql-order-data:/var/lib/mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ================================
  # MICROSERVICIOS CORE
  # ================================

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 45s

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "9296:9296"
    environment:
      EUREKA_HOST: service-registry
      ZIPKIN_HOST: zipkin
    networks:
      - microservices-network
    depends_on:
      service-registry:
        condition: service_started
      zipkin:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9296/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 45s

  # ================================
  # SERVICIOS DE NEGOCIO
  # ================================

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      EUREKA_HOST: service-registry
      CONFIG_SERVER_HOST: config-server
      ZIPKIN_HOST: zipkin
      DB_HOST: mysql-product
    networks:
      - microservices-network
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mysql-product:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    environment:
      EUREKA_HOST: service-registry
      CONFIG_SERVER_HOST: config-server
      ZIPKIN_HOST: zipkin
      DB_HOST: mysql-payment
    networks:
      - microservices-network
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mysql-payment:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      EUREKA_HOST: service-registry
      CONFIG_SERVER_HOST: config-server
      ZIPKIN_HOST: zipkin
      DB_HOST: mysql-order
    networks:
      - microservices-network
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      mysql-order:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ================================
  # API GATEWAY
  # ================================

  cloud-gateway:
    build:
      context: ./cloud-gateway
      dockerfile: Dockerfile
    container_name: cloud-gateway
    ports:
      - "9090:9090"
    environment:
      EUREKA_HOST: service-registry
      CONFIG_SERVER_HOST: config-server
      ZIPKIN_HOST: zipkin
      SPRING_PROFILES_ACTIVE: stress-testing
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - microservices-network
    depends_on:
      service-registry:
        condition: service_started
      config-server:
        condition: service_started
      product-service:
        condition: service_started
      payment-service:
        condition: service_started
      order-service:
        condition: service_started
      redis:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 75s
